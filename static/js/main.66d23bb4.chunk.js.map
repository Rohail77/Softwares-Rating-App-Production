{"version":3,"sources":["components/common/home link/HomeLink.js","components/common/wait message/WaitMessage.js","config/database_config.js","database/common functions/CommonFunctions.js","database/User.js","components/account/page/page components/danger zone/DangerZone.js","components/account/page/page components/forms/email form/EmailForm.js","components/account/page/page components/forms/name form/NameForm.js","components/account/page/page components/forms/password form/PasswordForm.js","components/account/page/page components/forms/Forms.js","components/account/page/AccountPage.js","components/main/page/page components/search/Search.js","components/common/stars list/Star.js","components/common/stars list/Stars.js","components/common/software basic info/software logo and details/SoftwareDetails.js","components/common/software basic info/software logo and details/SoftwareLogo.js","components/common/software basic info/SoftwareBasicInfo.js","components/main/page/page components/software info/Software.js","components/common/signin link/SigninLink.js","components/gateway/auth/Authorization.js","components/main/page/page components/account section/account/account options/signout link/SignoutLink.js","components/main/page/page components/account section/account/account options/AccountOptions.js","components/main/page/page components/account section/account/Account.js","components/main/page/page components/account section/AccountUISelector.js","components/common/pages/pages list/page/Page.js","components/common/pages/pages list/page navigation buttons/PreviousPageButton.js","components/common/pages/pages list/page navigation buttons/NextPageButton.js","components/common/pages/pages list/PagesList.js","components/common/pages/Pages.js","components/main/page/MainPage.js","components/main/page/MainPageLogic.js","components/not found page/NotFound.js","database/Softwares.js","components/software details/common components/reviews/reviews count/ReviewsCount.js","components/software details/common components/common links/RateLink.js","components/software details/page/page components/software info/SoftwareInfo.js","components/software details/page/page components/software rating and description/software description/SoftwareDescription.js","components/software details/page/page components/software rating and description/software rating/Rating.js","components/software details/page/page components/software rating and description/software rating/RatingsList.js","components/software details/page/page components/software rating and description/software rating/SoftwareRating.js","components/software details/common components/reviews/review list/Review.js","components/software details/common components/reviews/review list/ReviewsList.js","components/software details/common components/common links/ReviewsLink.js","components/software details/page/page components/reviews section/ReviewsSection.js","components/software details/page/SoftwareDetailsPage.js","context/CanUserReviewContext.js","components/software details/rate/page/already rated message/AlreadyRatedMessage.js","components/software details/rate/page/page components/confirmation modal/ConfirmationModal.js","components/common/rating stars list/RatingStar.js","components/common/rating stars list/RatingStarsList.js","components/software details/rate/page/page components/review form/rating input/RatingInput.js","components/software details/rate/page/page components/review form/limit message/ReviewLimitMessage.js","components/software details/rate/page/page components/review form/ReviewForm.js","components/software details/rate/page/page components/software info/Software.js","context/UserReviewsContext.js","context/UpdateSoftwareContext.js","components/software details/rate/page/RatePage.js","components/software details/rate/page/RatePageLogic.js","components/software details/reviews/page/page components/software info/SoftwareInfo.js","components/software details/reviews/page/page components/reviews section/reviews info/filter rating form/FilterRatingForm.js","components/software details/reviews/page/page components/reviews section/reviews info/ReviewsInfo.js","components/software details/reviews/page/ReviewsPage.js","components/software details/reviews/complete review/page/CompleteReview.js","components/software details/reviews/router/ReviewsRouter.js","components/software details/router/SoftwareDetailsRouter.js","components/software details/router/SoftwareDetailsRouterLogic.js","components/rated apps/page/page components/no ratings message/NoRatingsMessage.js","components/rated apps/page/page components/past ratings list/past rating/edit rating form/cta buttons/EditableFormButtons.js","components/rated apps/page/page components/past ratings list/past rating/edit rating form/cta buttons/NonEditableFormButtons.js","components/rated apps/page/page components/past ratings list/past rating/edit rating form/EditRatingForm.js","components/rated apps/page/page components/past ratings list/past rating/PastRating.js","components/rated apps/page/page components/past ratings list/PastRatingsList.js","components/rated apps/page/RatedAppsPage.js","components/rated apps/page/RatedAppsPageLogic.js","components/rated apps/page/RatedAppsContextConsumer.js","components/gateway/common components/FormError.js","components/gateway/common components/BackLink.js","components/gateway/pages/sign in/Signin.js","components/gateway/pages/sign in/SigninLogic.js","components/gateway/pages/sign up/page components/email verification modal/EmailVerificationModal.js","components/gateway/pages/sign up/Signup.js","components/gateway/pages/sign up/SignupLogic.js","components/AppRouter.js","App.js","index.js"],"names":["HomeLink","props","isActive","className","to","WaitMessage","src","alt","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","auth","formatDate","date","Intl","DateTimeFormat","format","user","this","userRef","collection","doc","id","currentUser","uid","email","displayName","newName","updateProfile","then","get","data","reviewedSoftwares","forEach","softwareID","index","update","username","length","catch","error","console","log","password","credential","EmailAuthProvider","reauthenticateWithCredential","delete","oldPassword","newPassword","Error","updatePassword","exists","updatedReview","Timestamp","now","FieldValue","arrayRemove","updater","onSnapshot","cb","userReviews","softwareName","name","unshift","toDate","arrayUnion","set","emailVerified","DangerZone","state","deleted","errorMsg","handleChange","bind","handleSubmit","closeErrorMessage","event","target","value","setState","preventDefault","wait","stopWait","showError","message","reset","type","placeholder","onChange","onClick","href","Component","EmailForm","htmlFor","disabled","NameForm","activated","updated","nameFieldRef","createRef","activateForm","deactivateForm","hideSuccessMessage","hideErrorMessage","removeExtraSpaces","split","filter","s","join","updateName","validate","showErrorMessage","setTimeout","updateUsername","showSuccessMessage","current","focus","onSubmit","ref","maxLength","PasswordForm","passwordFieldRef","Forms","AccountPage","onWait","Search","setSoftwareSearchString","softwareSearchInput","Star","starType","Stars","averageRating","getTotalRedStars","Math","floor","starTypes","i","push","Number","isInteger","ceil","getStarTypes","map","uuidv4","SoftwareDetails","developer","SoftwareLogo","toLowerCase","SoftwareBasicInfo","software","average_rating","SigninLink","from","pathname","authorization","signOut","createUserWithEmailAndPassword","userCredential","write","sendVerificationEmail","msg","sendEmailVerification","signout","signInWithEmailAndPassword","isEmailVerified","handleLoginDetection","onAuthStateChanged","aUser","setAuthorizationStateObserver","SignoutLink","AccountOptions","accountOptionsRef","Account","dropdownOpen","accountRef","toggleDropdown","handleClickOutside","document","addEventListener","removeEventListener","contains","AccountUISelector","isSignedin","Page","pageNumber","updateCurrentPage","PreviousPageButton","currentPage","isDisabled","style","cursor","NextPageButton","PagesList","totalPages","pageNumbers","getPageNumbers","Pages","totalItems","itemsPerPage","getTotalPages","MainPage","softwares","softwaresPerPage","emptySoftwareSearchInput","getInitialSoftwareIndexForCurrentPage","softwaresForCurrentPage","slice","Software","MainPageLogic","softwareSearchString","newPageNumber","string","toLocaleLowerCase","includes","getFilteredSoftwares","NotFound","softwaresRef","usersRef","querySnapshot","reviews","orderBy","review","total_reviews","increment","updateType","incrementStarType","decrementStarType","a","stars_count","numerator","denominator","Object","keys","star","parseInt","getAverage","toFixed","ReviewsCount","RateLink","SoftwareInfo","SoftwareDescription","description","Rating","ratingQty","ratingPercentage","width","RatingsList","totalStars","starCount","SoftwareRating","key","getTotalStars","Review","maxLengthDifference","fromSoftwareDetailsPage","noReviewsPage","lengthDifference","rating","ReviewsList","ReviewsLink","ReviewsSection","SoftwareDetailsPage","reviewsFetched","CanUserReviewContext","React","createContext","AlreadyRatedMessage","ConfirmationModal","setCanUserReview","handleClick","RatingStar","setRating","starNumber","RatingStarsList","RatingInput","ReviewLimitMessage","maxReviewLength","ReviewForm","saveData","addSoftwareToUserReviews","incrementTotalReviews","incrementStarCount","updateAverageRating","afterSave","writeRating","getUpdatedUserReviews","addSoftwareToReviews","bindUpdaterToReviews","updateStarCount","showConfirmationModal","updateSoftware","isIncomplete","UserReviewsContext","UpdateSoftwareContext","RatePage","formSubmitted","Consumer","RatePageLogic","canUserReview","FilterRatingForm","category","filterReviews","ReviewsInfo","ReviewsPage","reviewsPerPage","getInitialReviewIndexForCurrentPage","getReviewsForCurrentPage","CompleteReview","ReviewsRouter","getReview","find","path","exact","render","userID","match","params","location","SoftwareDetailsRouter","SoftwareDetailsRouterLogic","getReviews","canReview","bindUpdaterToReview","waitForReviews","Provider","NoRatingsMessage","EditableFormButtons","NonEditableFormButtons","setEditable","handleDelete","clickable","EditRatingForm","editable","PastRating","userReview","hideNoChangeMessage","updateSoftwareLocal","reviewUpdated","updateReview","showNoChangeMessage","updateTotalReviews","shouldDecrementTotalReviews","decrementTotalReviews","shouldIncrementTotalReviews","Promise","resolve","shouldChangeStarCount","replaceStarCount","deleteReview","textInputRef","PastRatingsList","fetchingUserReviews","RatedAppsPage","totalReviews","RatedAppsPageLogic","RatedAppsContextConsumer","FormError","BackLink","Signin","hasError","SigninLogic","signedin","onSignin","validationCheck","signin","EmailVerificationModal","Signup","signedUp","SignupLogic","onSignup","signup","AppRouter","getSoftware","component","App","loggedin","handleLogin","getUserReviews","getSoftwares","onLoginDetection","updatedSoftware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.66d23bb4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nfunction HomeLink(props) {\r\n  const { isActive } = props;\r\n\r\n  return (\r\n    <Link className={`page-link${isActive ? ' active-page-link' : ''}`} to='/'>\r\n      Home\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default HomeLink;\r\n","function WaitMessage() {\r\n  return (\r\n    <div className=\"wait-msg\">\r\n      <img src=\"/images/wait.svg\" alt=\"wait icon\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WaitMessage\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const database = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n","export function formatDate(date) {\r\n  return new Intl.DateTimeFormat('en-US').format(date);\r\n}\r\n\r\nexport function getAverage(stars_count) {\r\n  let numerator = 0;\r\n  let denominator = 0;\r\n  Object.keys(stars_count).forEach(star => {\r\n    numerator += Number.parseInt(star) * stars_count[star];\r\n    denominator += stars_count[star];\r\n  });\r\n  return denominator === 0 ? 0 : numerator / denominator;\r\n}","import { auth, database } from '../config/database_config';\r\nimport { formatDate } from './common functions/CommonFunctions';\r\nimport firebase from 'firebase';\r\n\r\nclass User {\r\n  set() {\r\n    this.userRef = database.collection('Users').doc(this.id);\r\n  }\r\n\r\n  get id() {\r\n    return auth.currentUser.uid;\r\n  }\r\n\r\n  get email() {\r\n    return auth.currentUser.email;\r\n  }\r\n\r\n  get name() {\r\n    return auth.currentUser.displayName;\r\n  }\r\n\r\n  updateUsername(newName) {\r\n    return auth.currentUser\r\n      .updateProfile({\r\n        displayName: newName,\r\n      })\r\n      .then(() => {\r\n        return this.userRef.get();\r\n      })\r\n      .then(doc => {\r\n        return doc.data().reviewedSoftwares;\r\n      })\r\n      .then(reviewedSoftwares => {\r\n        reviewedSoftwares.forEach((softwareID, index) => {\r\n          database\r\n            .collection('Softwares')\r\n            .doc(softwareID)\r\n            .collection('Reviews')\r\n            .doc(this.id)\r\n            .update({\r\n              username: newName,\r\n            });\r\n          if (index === reviewedSoftwares.length - 1) return;\r\n        });\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  delete(password) {\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      user.email,\r\n      password\r\n    );\r\n    return auth.currentUser\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => this.userRef.delete())\r\n      .then(() => {\r\n        auth.currentUser.delete();\r\n      });\r\n  }\r\n\r\n  updatePassword(oldPassword, newPassword) {\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      user.email,\r\n      oldPassword\r\n    );\r\n    return auth.currentUser\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        if (oldPassword === newPassword) {\r\n          throw new Error('No change to update');\r\n        } else {\r\n          return auth.currentUser.updatePassword(newPassword);\r\n        }\r\n      });\r\n  }\r\n\r\n  canReview(softwareID) {\r\n    return database\r\n      .collection('Softwares')\r\n      .doc(softwareID)\r\n      .collection('Reviews')\r\n      .doc(this.id)\r\n      .get()\r\n      .then(doc => {\r\n        return doc.exists ? false : true;\r\n      });\r\n  }\r\n\r\n  updateReview(softwareID, updatedReview) {\r\n    return database\r\n      .collection('Softwares')\r\n      .doc(softwareID)\r\n      .collection('Reviews')\r\n      .doc(this.id)\r\n      .update({\r\n        date: firebase.firestore.Timestamp.now(),\r\n        ...updatedReview,\r\n      });\r\n  }\r\n\r\n  deleteReview(softwareID) {\r\n    return this.userRef\r\n      .update({\r\n        reviewedSoftwares:\r\n          firebase.firestore.FieldValue.arrayRemove(softwareID),\r\n      })\r\n      .then(() => {\r\n        return database\r\n          .collection('Softwares')\r\n          .doc(softwareID)\r\n          .collection('Reviews')\r\n          .doc(this.id)\r\n          .delete();\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  bindUpdaterToReviews(updater) {\r\n    this.userRef.get().then(doc => {\r\n      if (doc.exists) {\r\n        doc.data().reviewedSoftwares.forEach(softwareID => {\r\n          database\r\n            .collection('Softwares')\r\n            .doc(softwareID)\r\n            .collection('Reviews')\r\n            .doc(this.id)\r\n            .onSnapshot(updater);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getReviews(cb) {\r\n    const userReviews = [];\r\n    this.userRef\r\n      .get()\r\n      .then(doc => {\r\n        if (!doc.exists) {\r\n          cb(userReviews);\r\n          return false;\r\n        }\r\n        return doc.data().reviewedSoftwares;\r\n      })\r\n      .then(reviewedSoftwares => {\r\n        if (!reviewedSoftwares || reviewedSoftwares.length === 0) {\r\n          cb(userReviews);\r\n          return;\r\n        }\r\n        reviewedSoftwares.forEach((softwareID, index) => {\r\n          let softwareName;\r\n          database\r\n            .collection('Softwares')\r\n            .doc(softwareID)\r\n            .get()\r\n            .then(doc => {\r\n              softwareName = doc.data().name;\r\n              return database\r\n                .collection('Softwares')\r\n                .doc(softwareID)\r\n                .collection('Reviews')\r\n                .doc(this.id)\r\n                .get();\r\n            })\r\n            .then(doc => {\r\n              userReviews.unshift({\r\n                softwareID,\r\n                softwareName,\r\n                ...doc.data(),\r\n                date: formatDate(doc.data().date.toDate()),\r\n              });\r\n              if (index + 1 === reviewedSoftwares.length) cb(userReviews);\r\n            });\r\n        });\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  addSoftwareToReviews(softwareID) {\r\n    return database\r\n      .collection('Users')\r\n      .doc(user.id)\r\n      .update({\r\n        reviewedSoftwares: firebase.firestore.FieldValue.arrayUnion(softwareID),\r\n      });\r\n  }\r\n\r\n  write(user) {\r\n    return database\r\n      .collection('Users')\r\n      .doc(this.id)\r\n      .set({ reviewedSoftwares: [] })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  isSignedin() {\r\n    return auth.currentUser;\r\n  }\r\n\r\n  isEmailVerified() {\r\n    return auth.currentUser.emailVerified;\r\n  }\r\n}\r\n\r\nexport const user = new User();\r\n","import { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { user } from '../../../../../database/User';\r\n\r\nclass DangerZone extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: '',\r\n      deleted: false,\r\n      error: false,\r\n      errorMsg: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.closeErrorMessage = this.closeErrorMessage.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { password } = this.state;\r\n    const { wait, stopWait } = this.props;\r\n    wait();\r\n    user\r\n      .delete(password)\r\n      .then(() => {\r\n        stopWait();\r\n        this.setState({\r\n          deleted: true,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        stopWait();\r\n        this.showError(error.message);\r\n      });\r\n  }\r\n\r\n  showError(errorMsg) {\r\n    this.setState({\r\n      error: true,\r\n      errorMsg,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      password: '',\r\n      error: false,\r\n      errorMsg: '',\r\n    });\r\n  }\r\n\r\n  closeErrorMessage(event) {\r\n    event.preventDefault();\r\n    this.reset();\r\n  }\r\n\r\n  render() {\r\n    const { password, deleted, error, errorMsg } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {deleted ? <Redirect to='/' /> : null}\r\n        <section className='danger-zone'>\r\n          <h2 className='danger-zone__h'>Danger Zone</h2>\r\n          <h1 className='danger-zone__delete-h'>Delete account</h1>\r\n          <div className='danger-zone__cta'>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              placeholder='Enter your password'\r\n              onChange={this.handleChange}\r\n            />\r\n            <button\r\n              type='button'\r\n              className={`danger-zone__delete-btn${\r\n                password.length < 6 ? ' danger-zone__delete-btn--disabled' : ''\r\n              }`}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n          {error ? (\r\n            <div className='danger-zone__error-msg'>\r\n              <a\r\n                href='close'\r\n                className='danger-zone__error-msg__cross'\r\n                onClick={this.closeErrorMessage}\r\n              >\r\n                <img src='/images/cross.svg' alt='cross' />{' '}\r\n              </a>\r\n              <p className='danger-zone__error-msg__para'>{errorMsg}</p>\r\n            </div>\r\n          ) : null}\r\n          <p className='danger-zone__warning-para'>Deleting your account will not delete your ratings history. Delete it manually if you desire to.</p>\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DangerZone;\r\n","import { user } from '../../../../../../database/User';\r\n\r\nfunction EmailForm() {\r\n  return (\r\n    <form className='email-form'>\r\n      <div>\r\n        <label htmlFor='email'>Email</label>\r\n        <input\r\n          className='input-field'\r\n          type='email'\r\n          name='email'\r\n          id='email'\r\n          value={user.email}\r\n          disabled\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EmailForm;\r\n","import { Component, createRef } from 'react';\r\nimport { user } from '../../../../../../database/User';\r\n\r\nclass NameForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: user.name,\r\n      activated: false,\r\n      updated: false,\r\n      error: false,\r\n      errorMsg: '',\r\n    };\r\n    this.data = {\r\n      errorMsg: '',\r\n    };\r\n    this.nameFieldRef = createRef();\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.activateForm = this.activateForm.bind(this);\r\n    this.deactivateForm = this.deactivateForm.bind(this);\r\n    this.hideSuccessMessage = this.hideSuccessMessage.bind(this);\r\n    this.hideErrorMessage = this.hideErrorMessage.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.removeExtraSpaces();\r\n  }\r\n\r\n  removeExtraSpaces() {\r\n    this.setState(\r\n      state => ({\r\n        name: state.name\r\n          .split(' ')\r\n          .filter(s => s)\r\n          .join(' '),\r\n      }),\r\n      this.updateName\r\n    );\r\n  }\r\n\r\n  updateName() {\r\n    if (!this.validate()) {\r\n      this.showErrorMessage(this.data.errorMsg);\r\n      setTimeout(this.hideErrorMessage, 2000);\r\n      return;\r\n    }\r\n\r\n    const { name } = this.state;\r\n    const { wait, stopWait } = this.props;\r\n    wait();\r\n    user.updateUsername(name).then(() => {\r\n      stopWait();\r\n      this.deactivateForm();\r\n      this.showSuccessMessage();\r\n    });\r\n  }\r\n\r\n  validate() {\r\n    const { name } = this.state;\r\n    if (name === '') {\r\n      this.data.errorMsg = 'Name field is empty';\r\n      return false;\r\n    }\r\n    if (name.length < 2) {\r\n      this.data.errorMsg = 'Name should be at least 2 characters long';\r\n      return false;\r\n    }\r\n    if (user.name === name) {\r\n      this.data.errorMsg = 'No change to update';\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isChange() {\r\n    const { name } = this.state;\r\n    return user.name !== name;\r\n  }\r\n\r\n  showSuccessMessage() {\r\n    this.setState(\r\n      {\r\n        updated: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.hideSuccessMessage, 2000);\r\n      }\r\n    );\r\n  }\r\n\r\n  hideSuccessMessage() {\r\n    this.setState({\r\n      updated: false,\r\n    });\r\n  }\r\n\r\n  showErrorMessage(errorMsg) {\r\n    this.setState({\r\n      error: true,\r\n      errorMsg,\r\n    });\r\n  }\r\n\r\n  hideErrorMessage() {\r\n    this.setState({\r\n      error: false,\r\n      errorMsg: '',\r\n    });\r\n  }\r\n\r\n  activateForm() {\r\n    this.setState(\r\n      {\r\n        activated: true,\r\n      },\r\n      () => this.nameFieldRef.current.focus()\r\n    );\r\n  }\r\n\r\n  deactivateForm() {\r\n    this.setState({\r\n      activated: false,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      name: user.name,\r\n      activated: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, activated, updated, error, errorMsg } = this.state;\r\n\r\n    return (\r\n      <form className='name-form' onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor='name'>Name</label>\r\n          <input\r\n            className='input-field'\r\n            type='text'\r\n            name='name'\r\n            id='name'\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            disabled={!activated}\r\n            ref={this.nameFieldRef}\r\n            maxLength={50}\r\n          />\r\n        </div>\r\n        {activated ? (\r\n          <div className='ctas'>\r\n            <input type='submit' className='save-btn' value='Save'></input>\r\n            <button type='button' className='cancel-btn' onClick={this.reset}>\r\n              Cancel{' '}\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className='ctas'>\r\n            <button className='change-btn' onClick={this.activateForm}>\r\n              Change{' '}\r\n            </button>\r\n          </div>\r\n        )}\r\n        {updated ? <p className='success-msg'>* Name Changed</p> : null}\r\n        {error ? <p className='error-msg'>* {errorMsg}</p> : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NameForm;\r\n","import { Component, createRef, Fragment } from 'react';\r\nimport { user } from '../../../../../../database/User';\r\n\r\nclass PasswordForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      activated: false,\r\n      updated: false,\r\n      error: false,\r\n      errorMsg: '',\r\n    };\r\n    this.passwordFieldRef = createRef();\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.activateForm = this.activateForm.bind(this);\r\n    this.deactivateForm = this.deactivateForm.bind(this);\r\n    this.hideSuccessMessage = this.hideSuccessMessage.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.hideErrorMessage = this.hideErrorMessage.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      const { oldPassword, newPassword } = this.state;\r\n      const { wait, stopWait } = this.props;\r\n      wait();\r\n      user\r\n        .updatePassword(oldPassword, newPassword)\r\n        .then(() => {\r\n          stopWait();\r\n          this.deactivateForm();\r\n          this.showSuccessMessage();\r\n          this.reset();\r\n        })\r\n        .catch(error => {\r\n          stopWait();\r\n          this.showErrorMessage(error.message);\r\n          setTimeout(this.hideErrorMessage, 2000);\r\n        });\r\n    } else {\r\n      this.showErrorMessage('The form is not filled completely');\r\n      setTimeout(this.hideErrorMessage, 2000);\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    const { oldPassword, newPassword } = this.state;\r\n    return oldPassword !== '' && newPassword !== '';\r\n  }\r\n\r\n  showSuccessMessage() {\r\n    this.setState(\r\n      {\r\n        updated: true,\r\n      },\r\n      () => {\r\n        setTimeout(this.hideSuccessMessage, 2000);\r\n      }\r\n    );\r\n  }\r\n\r\n  hideSuccessMessage() {\r\n    this.setState({\r\n      updated: false,\r\n    });\r\n  }\r\n\r\n  showErrorMessage(errorMsg) {\r\n    this.setState({\r\n      error: true,\r\n      errorMsg,\r\n    });\r\n  }\r\n\r\n  hideErrorMessage() {\r\n    this.setState({\r\n      error: false,\r\n      errorMsg: '',\r\n    });\r\n  }\r\n\r\n  activateForm() {\r\n    this.setState(\r\n      {\r\n        activated: true,\r\n      },\r\n      () => this.passwordFieldRef.current.focus()\r\n    );\r\n  }\r\n\r\n  deactivateForm() {\r\n    this.setState({\r\n      activated: false,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      activated: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { oldPassword, newPassword, activated, updated, error, errorMsg } =\r\n      this.state;\r\n    return (\r\n      <form className='password-form' onSubmit={this.handleSubmit}>\r\n        {activated ? (\r\n          <Fragment>\r\n            <div>\r\n              <label htmlFor='old-password'>Enter Old Password</label>\r\n              <input\r\n                className='input-field'\r\n                type='password'\r\n                name='oldPassword'\r\n                id='old-password'\r\n                value={oldPassword}\r\n                onChange={this.handleChange}\r\n                ref={this.passwordFieldRef}\r\n                maxLength={30}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor='new-password'>Enter New Password</label>\r\n              <input\r\n                className='input-field'\r\n                type='password'\r\n                name='newPassword'\r\n                id='new-password'\r\n                value={newPassword}\r\n                onChange={this.handleChange}\r\n                placeholder='At least 6 characters long'\r\n                maxLength={30}\r\n              />\r\n              {error ? <p className='error-msg'>* {errorMsg}</p> : null}\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <div>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              className='input-field'\r\n              type='password'\r\n              name='password'\r\n              id='password'\r\n              value='******'\r\n              onChange={this.handleChange}\r\n              ref={this.passwordFieldRef}\r\n              disabled={!activated}\r\n            />\r\n          </div>\r\n        )}\r\n        {activated ? (\r\n          <div className='ctas'>\r\n            <input type='submit' className='save-btn' value='Save'></input>\r\n            <button type='button' className='cancel-btn' onClick={this.reset}>\r\n              Cancel{' '}\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className='ctas'>\r\n            <button className='change-btn' onClick={this.activateForm}>\r\n              Change{' '}\r\n            </button>\r\n          </div>\r\n        )}\r\n        {updated ? <p className='success-msg'>* Password Changed</p> : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordForm;\r\n","import EmailForm from './email form/EmailForm';\r\nimport NameForm from './name form/NameForm';\r\nimport PasswordForm from './password form/PasswordForm';\r\n\r\nfunction Forms({ wait, stopWait }) {\r\n  return (\r\n    <section className='forms'>\r\n      <EmailForm />\r\n\r\n      <NameForm wait={wait} stopWait={stopWait} />\r\n\r\n      <PasswordForm wait={wait} stopWait={stopWait} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Forms;\r\n","import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeLink from '../../common/home link/HomeLink';\r\nimport WaitMessage from '../../common/wait message/WaitMessage';\r\nimport DangerZone from './page components/danger zone/DangerZone';\r\nimport Forms from './page components/forms/Forms';\r\n\r\nclass AccountPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onWait: false,\r\n    };\r\n    this.wait = this.wait.bind(this);\r\n    this.stopWait = this.stopWait.bind(this);\r\n  }\r\n\r\n  wait() {\r\n    this.setState({\r\n      onWait: true,\r\n    });\r\n  }\r\n\r\n  stopWait() {\r\n    this.setState({\r\n      onWait: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { onWait } = this.state;\r\n\r\n    return (\r\n      <div className='wrapper account-wrapper'>\r\n        <header>\r\n          <div className='breadcrumbs'>\r\n            <HomeLink />\r\n            <span> \\ </span>\r\n            <Link className='page-link active-page-link' to='/account'>\r\n              Account\r\n            </Link>\r\n          </div>\r\n        </header>\r\n\r\n        <Forms wait={this.wait} stopWait={this.stopWait} />\r\n\r\n        <DangerZone wait={this.wait} stopWait={this.stopWait} />\r\n        {onWait ? <WaitMessage /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountPage;\r\n","function Search({ setSoftwareSearchString, softwareSearchInput }) {\r\n  const handleClick = event => {\r\n    event.preventDefault();\r\n    setSoftwareSearchString(softwareSearchInput.current.value);\r\n  };\r\n\r\n  return (\r\n    <div className='search'>\r\n      <a className='search__img' href='null' onClick={handleClick}>\r\n        <img src='images/search.svg' alt='magnifying glass' />\r\n      </a>\r\n      <input\r\n        type='text'\r\n        name='name'\r\n        placeholder='Search'\r\n        ref={softwareSearchInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","function Star({ starType }) {\r\n  return (\r\n    <li className='star'>\r\n      <img src={`/images/${starType}.svg`} alt={starType} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Star;\r\n","import Star from './Star';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Stars({ averageRating }) {\r\n  const getTotalRedStars = () => Math.floor(averageRating);\r\n\r\n  const getTotalWhiteStars = () =>\r\n    Number.isInteger(averageRating)\r\n      ? 5 - averageRating\r\n      : 5 - Math.ceil(averageRating);\r\n\r\n  const getStarTypes = () => {\r\n    const starTypes = [];\r\n\r\n    for (let i = 1; i <= getTotalRedStars(); i++) {\r\n      starTypes.push('red star');\r\n    }\r\n\r\n    if (getTotalRedStars() < 5 && !Number.isInteger(averageRating)) {\r\n      starTypes.push('half filled red star');\r\n    }\r\n\r\n    for (let i = 1; i <= getTotalWhiteStars(); i++) {\r\n      starTypes.push('white star');\r\n    }\r\n    return starTypes;\r\n  };\r\n\r\n  return (\r\n    <ul className='stars-list'>\r\n      {getStarTypes().map(starType => (\r\n        <Star starType={starType} key={uuidv4()} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Stars;\r\n","function SoftwareDetails({ name, developer }) {\r\n\r\n  return (\r\n    <div className='software__details'>\r\n      <p className='software__name'>{name}</p>\r\n      <p className='software__developer'>{developer}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoftwareDetails;\r\n","function SoftwareLogo({name}) {\r\n\r\n  return (\r\n    <img\r\n      src={`/images/software logos/${name.toLowerCase()}.svg`}\r\n      alt={`${name.toLowerCase()} logo`}\r\n      className='software__logo'\r\n    />\r\n  );\r\n}\r\n\r\nexport default SoftwareLogo;\r\n","import SoftwareDetails from './software logo and details/SoftwareDetails';\r\nimport SoftwareLogo from './software logo and details/SoftwareLogo';\r\nimport { Fragment  } from 'react';\r\n\r\nfunction SoftwareBasicInfo(props) {\r\n  const { name } = props;\r\n  return (\r\n    <Fragment>\r\n      <SoftwareLogo name={name} />\r\n      <SoftwareDetails {...props} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SoftwareBasicInfo;\r\n","import Stars from '../../../../common/stars list/Stars';\r\nimport { Link } from 'react-router-dom';\r\nimport SoftwareBasicInfo from '../../../../common/software basic info/SoftwareBasicInfo';\r\n\r\nfunction software(props) {\r\n  const { name, developer, average_rating, id } = props.software;\r\n  return (\r\n    <li className='software'>\r\n      <Link to={`/software_details/${id}`}>\r\n        <SoftwareBasicInfo name={name} developer={developer} />\r\n        <Stars averageRating={average_rating} />\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default software;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction SigninLink({ from }) {\r\n  return (\r\n    <Link className='signin-link' to={{ pathname: '/signin', state: { from } }}>\r\n      Sign in\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SigninLink;\r\n","import { auth } from '../../../config/database_config';\r\nimport { user } from '../../../database/User';\r\n\r\nexport class Authorization {\r\n  signout() {\r\n    auth.signOut();\r\n  }\r\n\r\n  signup({ email, password, name }, cb) {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredential => {\r\n        user.write();\r\n        userCredential.user.updateProfile({\r\n          displayName: name,\r\n        });\r\n        this.sendVerificationEmail(cb);\r\n      })\r\n      .catch(error => cb({ msg: error.message }));\r\n  }\r\n\r\n  sendVerificationEmail(cb) {\r\n    auth.currentUser\r\n      .sendEmailVerification()\r\n      .then(() => {\r\n        this.signout();\r\n        cb(null);\r\n      })\r\n      .catch(error => cb({ msg: error.message }));\r\n  }\r\n\r\n  signin({ email, password }, cb) {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredential => {\r\n        if (user.isEmailVerified())\r\n        cb();\r\n        else {\r\n          cb({\r\n            msg: `You have not verified your email. Please verify your email by clicking the link we emailed you at your provided email address (${email}).`,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => cb({ msg: error.message }));\r\n  }\r\n\r\n  onLoginDetection(cb) {\r\n    this.handleLoginDetection = cb;\r\n  }\r\n\r\n  setAuthorizationStateObserver() {\r\n    auth.onAuthStateChanged(aUser => {\r\n      if (aUser) {\r\n        this.handleLoginDetection(true);\r\n      } else {\r\n        this.handleLoginDetection(false);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const authorization = new Authorization();\r\nauthorization.setAuthorizationStateObserver();\r\n","import { Link } from 'react-router-dom';\r\nimport { authorization } from '../../../../../../../gateway/auth/Authorization';\r\n\r\nfunction SignoutLink() {\r\n  const handleClick = () => authorization.signout();\r\n\r\n  return (\r\n    <Link className='signout-link' onClick={handleClick} to='/'>\r\n      <span>Signout</span>\r\n      <img src='/images/signout.svg' alt='signout' />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SignoutLink;\r\n","import { Link } from 'react-router-dom';\r\nimport SignoutLink from './signout link/SignoutLink';\r\n\r\nfunction AccountOptions({ accountOptionsRef }) {\r\n  return (\r\n    <ul className='account__options' ref={accountOptionsRef}>\r\n      <li>\r\n        <Link className='account__option' to='/account'>\r\n          Account\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className='account__option' to='/rated_apps'>\r\n          Rated Apps\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <SignoutLink />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default AccountOptions;\r\n","import { createRef, Component } from 'react';\r\nimport AccountOptions from './account options/AccountOptions';\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n    };\r\n    this.accountRef = createRef();\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (\r\n      this.accountRef.current &&\r\n      (!this.accountRef.current.contains(event.target) ||\r\n        !this.accountRef.current === event.target)\r\n    ) {\r\n      this.setState(state => ({\r\n        dropdownOpen: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  toggleDropdown(event) {\r\n    event.preventDefault();\r\n    this.setState(state => ({\r\n      dropdownOpen: !state.dropdownOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { dropdownOpen } = this.state;\r\n\r\n    return (\r\n      <div className='account-container' ref={this.accountRef}>\r\n        <a className='account' href='account options' onClick={this.toggleDropdown}>\r\n          <div className='avatar-container'>\r\n            <img src='/images/avatar.svg' alt='avatar' />\r\n          </div>\r\n          <img src='/images/down arrow.svg' alt='down arrrow' />\r\n        </a>\r\n        {dropdownOpen ? <AccountOptions /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import { Fragment } from 'react';\r\nimport SigninLink from '../../../../common/signin link/SigninLink';\r\nimport { user } from '../../../../../database/User';\r\nimport Account from './account/Account';\r\n\r\nfunction AccountUISelector() {\r\n  return (\r\n    <Fragment>\r\n      {user.isSignedin() ? <Account /> : <SigninLink from='/' />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountUISelector;\r\n","function Page({ pageNumber, isActive, updateCurrentPage }) {\r\n  const handleClick = event => {\r\n    event.preventDefault();\r\n    updateCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        className={`page page--clickable${isActive ? ' active-page' : ''}`}\r\n        onClick={handleClick}\r\n      >\r\n        {pageNumber}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","function PreviousPageButton({ updateCurrentPage, currentPage, isDisabled }) {\r\n  const handleClick = () => updateCurrentPage(currentPage - 1);\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        className={`page${isDisabled ? '' : ' page--clickable'}`}\r\n        onClick={handleClick}\r\n        disabled={isDisabled}\r\n        style={{ cursor: `${isDisabled ? 'auto' : 'pointer'}` }}\r\n      >\r\n        <img src='/images/left_arrow.svg' alt='left arrow' />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default PreviousPageButton;\r\n","function NextPageButton({ updateCurrentPage, currentPage, isDisabled }) {\r\n  const handleClick = () => updateCurrentPage(currentPage + 1);\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        className={`page${isDisabled ? '' : ' page--clickable'}`}\r\n        onClick={handleClick}\r\n        disabled={isDisabled}\r\n        style={{ cursor: `${isDisabled ? 'auto' : 'pointer'}` }}\r\n      >\r\n        <img src='/images/right_arrow.svg' alt='right arrow' />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NextPageButton;\r\n","import Page from './page/Page';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PreviousPageButton from './page navigation buttons/PreviousPageButton';\r\nimport NextPageButton from './page navigation buttons/NextPageButton';\r\n\r\nfunction PagesList({ currentPage, totalPages, updateCurrentPage }) {\r\n  const endPagesNotReached = () => currentPage + 2 <= totalPages;\r\n\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n\r\n    if (endPagesNotReached()) {\r\n      for (\r\n        let pageNumber = currentPage;\r\n        pageNumber <= currentPage + 2;\r\n        pageNumber++\r\n      ) {\r\n        pageNumbers.push(pageNumber);\r\n      }\r\n    } else {\r\n      for (\r\n        let pageNumber = totalPages - 2;\r\n        pageNumber <= totalPages;\r\n        pageNumber++\r\n      ) {\r\n        if (pageNumber > 0) pageNumbers.push(pageNumber);\r\n      }\r\n    }\r\n    return pageNumbers;\r\n  };\r\n\r\n  const disablePreviousPageButton = () => currentPage === 1;\r\n\r\n  const disableNextPageButton = () => currentPage === totalPages;\r\n\r\n  return (\r\n    <ul className='pages__list'>\r\n      <PreviousPageButton\r\n        isDisabled={disablePreviousPageButton()}\r\n        currentPage={currentPage}\r\n        updateCurrentPage={updateCurrentPage}\r\n      />\r\n      {getPageNumbers().map(pageNumber => (\r\n        <Page\r\n          pageNumber={pageNumber}\r\n          updateCurrentPage={updateCurrentPage}\r\n          isActive={pageNumber === currentPage}\r\n          key={uuidv4()}\r\n        />\r\n      ))}\r\n      <NextPageButton\r\n        isDisabled={disableNextPageButton()}\r\n        currentPage={currentPage}\r\n        updateCurrentPage={updateCurrentPage}\r\n      />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PagesList;\r\n","import PagesList from './pages list/PagesList';\r\n\r\nfunction Pages(props) {\r\n  const { currentPage, totalItems, itemsPerPage, updateCurrentPage } = props;\r\n\r\n  const getTotalPages = () => Math.ceil(totalItems / itemsPerPage);\r\n\r\n  return (\r\n    <div className='pages'>\r\n      <PagesList\r\n        currentPage={currentPage}\r\n        totalPages={getTotalPages()}\r\n        updateCurrentPage={updateCurrentPage}\r\n      />\r\n      <p className='pages__info'>\r\n        Page {currentPage} of{' '}\r\n        <span className='pages__info__total-pages'>{getTotalPages()}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pages;\r\n","import { createRef, Fragment } from 'react';\r\nimport Search from './page components/search/Search';\r\nimport Software from './page components/software info/Software';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport WaitMessage from '../../common/wait message/WaitMessage';\r\nimport AccountUISelector from './page components/account section/AccountUISelector';\r\nimport Pages from '../../common/pages/Pages';\r\n\r\nfunction MainPage(props) {\r\n  const {\r\n    softwares,\r\n    setSoftwareSearchString,\r\n    onWait,\r\n    updateCurrentPage,\r\n    currentPage,\r\n    softwaresPerPage,\r\n  } = props;\r\n\r\n  const softwareSearchInput = createRef();\r\n\r\n  const onHomePageClick = () => {\r\n    setSoftwareSearchString('');\r\n    emptySoftwareSearchInput();\r\n  };\r\n\r\n  const emptySoftwareSearchInput = () =>\r\n    (softwareSearchInput.current.value = '');\r\n\r\n  const getSoftwaresForCurrentPage = () =>\r\n    softwares.slice(\r\n      getInitialSoftwareIndexForCurrentPage(),\r\n      getInitialSoftwareIndexForCurrentPage() + softwaresPerPage\r\n    );\r\n\r\n  const getInitialSoftwareIndexForCurrentPage = () =>\r\n    (currentPage - 1) * softwaresPerPage;\r\n\r\n  const softwaresForCurrentPage = getSoftwaresForCurrentPage();\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className='main-header'>\r\n        <div className='main-header__flex main-wrapper wrapper'>\r\n          <Link className='home-link' to='/' onClick={onHomePageClick}>\r\n            Home\r\n          </Link>\r\n          <AccountUISelector />\r\n        </div>\r\n      </header>\r\n      <div className='wrapper main-wrapper'>\r\n        <Search\r\n          setSoftwareSearchString={setSoftwareSearchString}\r\n          softwareSearchInput={softwareSearchInput}\r\n        />\r\n        {onWait ? (\r\n          <WaitMessage />\r\n        ) : softwaresForCurrentPage.length === 0 ? (\r\n          <p className='no-results-msg'>No results!</p>\r\n        ) : (\r\n          <Fragment>\r\n            <ul className='softwares-list'>\r\n              {softwaresForCurrentPage.map(software => (\r\n                <Software software={software} key={uuidv4()} />\r\n              ))}\r\n            </ul>\r\n            <Pages\r\n              totalItems={softwares.length}\r\n              itemsPerPage={softwaresPerPage}\r\n              currentPage={currentPage}\r\n              updateCurrentPage={updateCurrentPage}\r\n            />\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import { Component } from 'react';\r\nimport MainPage from './MainPage';\r\n\r\nclass MainPageLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      softwareSearchString: '',\r\n    };\r\n    this.data = {\r\n      softwaresPerPage: 20,\r\n    };\r\n    this.setSoftwareSearchString = this.setSoftwareSearchString.bind(this);\r\n    this.updateCurrentPage = this.updateCurrentPage.bind(this);\r\n  }\r\n\r\n  updateCurrentPage(newPageNumber) {\r\n    this.setState({\r\n      currentPage: newPageNumber,\r\n    });\r\n  }\r\n\r\n  setSoftwareSearchString(string) {\r\n    this.setState({\r\n      softwareSearchString: string,\r\n      currentPage: 1,\r\n    });\r\n  }\r\n\r\n  getFilteredSoftwares() {\r\n    const { softwareSearchString } = this.state;\r\n    const { softwares } = this.props;\r\n\r\n    return softwareSearchString === ''\r\n      ? softwares\r\n      : softwares.filter(software => {\r\n          return software.name\r\n            .toLocaleLowerCase()\r\n            .includes(softwareSearchString.toLocaleLowerCase());\r\n        });\r\n  }\r\n\r\n  render() {\r\n    const { onWait } = this.props;\r\n    const { currentPage } = this.state;\r\n    const { softwaresPerPage } = this.data;\r\n\r\n    return (\r\n      <MainPage\r\n        softwares={this.getFilteredSoftwares()}\r\n        setSoftwareSearchString={this.setSoftwareSearchString}\r\n        onWait={onWait}\r\n        updateCurrentPage={this.updateCurrentPage}\r\n        currentPage={currentPage}\r\n        softwaresPerPage={softwaresPerPage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPageLogic;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className='not-found-wrapper'>\r\n      <section>\r\n        <h1 className='not-found-h'>404 </h1>\r\n        <p className='not-found-para'>\r\n          Page Not Found. We could not find your requested URL. Click{' '}\r\n          <Link className='back-link--text' to='/'>\r\n            here\r\n          </Link>{' '}\r\n          to return to home page\r\n        </p>\r\n        <Link className='back-link--btn' to='/'>\r\n          Back to home\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { database } from '../config/database_config';\r\nimport firebase from 'firebase';\r\nimport { user } from './User';\r\nimport { formatDate, getAverage } from './common functions/CommonFunctions';\r\n\r\nclass Softwares {\r\n  constructor() {\r\n    this.softwaresRef = database.collection('Softwares');\r\n    this.usersRef = database.collection('Users');\r\n  }\r\n\r\n  bindUpdaterToReview(softwareID, cb) {\r\n    this.softwaresRef\r\n      .doc(softwareID)\r\n      .collection('Reviews')\r\n      .doc(user.id)\r\n      .onSnapshot(doc => {\r\n        cb();\r\n      });\r\n  }\r\n\r\n  getSoftwares(cb) {\r\n    const softwares = [];\r\n    this.softwaresRef\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          softwares.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        cb(softwares);\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  // addSoftwares() {\r\n  //   softwares.forEach(software => {\r\n  //     database.collection('Softwares').add(software);\r\n  //   });\r\n  // }\r\n\r\n  getReviews(softwareID, cb) {\r\n    const reviews = [];\r\n    this.softwaresRef\r\n      .doc(softwareID)\r\n      .collection('Reviews')\r\n      .orderBy('date', 'desc')\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          if (doc.data().review !== '') {\r\n            reviews.push({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n              date: formatDate(doc.data().date.toDate()),\r\n            });\r\n          }\r\n        });\r\n        cb(reviews);\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  getSoftware(softwareID, cb) {\r\n    this.softwaresRef\r\n      .doc(softwareID)\r\n      .get()\r\n      .then(doc => {\r\n        cb({ ...doc.data(), id: doc.id });\r\n      })\r\n      .catch(error => console.log('Error: ', error));\r\n  }\r\n\r\n  writeRating(softwareID, data) {\r\n    return this.softwaresRef\r\n      .doc(softwareID)\r\n      .collection('Reviews')\r\n      .doc(user.id)\r\n      .set({ ...data, date: firebase.firestore.Timestamp.now() });\r\n  }\r\n\r\n  incrementTotalReviews(softwareID) {\r\n    return this.softwaresRef.doc(softwareID).update({\r\n      total_reviews: firebase.firestore.FieldValue.increment(1),\r\n    });\r\n  }\r\n\r\n  decrementTotalReviews(softwareID) {\r\n    return this.softwaresRef.doc(softwareID).update({\r\n      total_reviews: firebase.firestore.FieldValue.increment(-1),\r\n    });\r\n  }\r\n\r\n  updateStarCount(softwareID, starType, updateType) {\r\n    return this.softwaresRef.doc(softwareID).update({\r\n      ['stars_count.' + starType]:\r\n        updateType === 'INC'\r\n          ? firebase.firestore.FieldValue.increment(1)\r\n          : firebase.firestore.FieldValue.increment(-1),\r\n    });\r\n  }\r\n\r\n  async replaceStarCount(softwareID, incrementStarType, decrementStarType) {\r\n    await this.softwaresRef.doc(softwareID).update({\r\n      ['stars_count.' + incrementStarType]:\r\n        firebase.firestore.FieldValue.increment(1),\r\n    });\r\n    return await this.softwaresRef.doc(softwareID).update({\r\n      ['stars_count.' + decrementStarType]:\r\n        firebase.firestore.FieldValue.increment(-1),\r\n    });\r\n  }\r\n\r\n  updateAverageRating(softwareID) {\r\n    return this.softwaresRef\r\n      .doc(softwareID)\r\n      .get()\r\n      .then(doc => {\r\n        return getAverage(doc.data().stars_count);\r\n      })\r\n      .then(averageRating => {\r\n        return this.softwaresRef.doc(softwareID).update({\r\n          average_rating: Number(averageRating.toFixed(1)),\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nexport const softwares = new Softwares();\r\n","function ReviewsCount({ total_reviews }) {\r\n  return (\r\n    <div>\r\n      <span className='reviews-qty'> {total_reviews} </span>\r\n      <span>\r\n        {total_reviews === 1 || total_reviews === 0 ? 'Review' : 'Reviews'}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsCount;\r\n","import { Link } from 'react-router-dom';\r\nimport { user } from '../../../../database/User';\r\n\r\nfunction RateLink({ softwareID, from }) {\r\n  const getDestinationInformation = () =>\r\n    user.isSignedin()\r\n      ? {\r\n          pathname: `/software_details/${softwareID}/rate`,\r\n        }\r\n      : {\r\n          pathname: '/signin',\r\n          state: {\r\n            from: `/software_details/${softwareID}`,\r\n          },\r\n        };\r\n\r\n  return (\r\n    <Link className='rate-link' to={getDestinationInformation()}>\r\n      Rate this app\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default RateLink;\r\n","import ReviewsCount from '../../../common components/reviews/reviews count/ReviewsCount';\r\nimport SoftwareBasicInfo from '../../../../common/software basic info/SoftwareBasicInfo';\r\nimport RateLink from '../../../common components/common links/RateLink';\r\n\r\nfunction SoftwareInfo(props) {\r\n  const { name, developer, average_rating, total_reviews, id } = props;\r\n\r\n  return (\r\n    <section className='software'>\r\n      <SoftwareBasicInfo name={name} developer={developer} />\r\n\r\n      <div className='feedback-content'>\r\n        <div className='feedback'>\r\n          <div className='feedback__rating'>\r\n            <span className='rating-qty'>{average_rating}</span>\r\n            <img src='/images/red star.svg' alt='red star' />\r\n          </div>\r\n          <span> | </span>\r\n          <div className='feedback__reviews'>\r\n            <ReviewsCount total_reviews={total_reviews} />\r\n          </div>\r\n        </div>\r\n        <RateLink softwareID={id} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SoftwareInfo;\r\n","function SoftwareDescription({ description }) {\r\n  return (\r\n    <div className='software-description'>\r\n      <h2>Description</h2>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoftwareDescription;\r\n","function Rating({ ratingQty, ratingPercentage }) {\r\n  return (\r\n    <div>\r\n      <li className='rating'>\r\n        <div className='rating__type'>\r\n          <span className='rating-qty'>{ratingQty}</span>\r\n          <img src='/images/red star.svg' alt='red star' />\r\n        </div>\r\n        <div className='rating__growth'>\r\n          <div\r\n            className='rating__growth__line'\r\n            style={{\r\n              width: `${ratingPercentage}%`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import Rating from './Rating';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RatingsList({ totalStars, stars_count }) {\r\n  function getStarPercentage(starCount) {\r\n    return totalStars === 0 ? 0 : (starCount / totalStars) * 100;\r\n  }\r\n\r\n  return (\r\n    <ul className='ratings-list'>\r\n      {Object.keys(stars_count).map(star => (\r\n        <Rating\r\n          ratingPercentage={getStarPercentage(stars_count[star])}\r\n          ratingQty={star}\r\n          key={uuidv4()}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RatingsList;\r\n","import Stars from '../../../../../common/stars list/Stars';\r\nimport RatingsList from './RatingsList';\r\n\r\nfunction SoftwareRating({ average_rating, stars_count }) {\r\n  const getTotalStars = () => {\r\n    let totalStars = 0;\r\n    Object.keys(stars_count).forEach(key => {\r\n      totalStars += stars_count[key];\r\n    });\r\n\r\n    return totalStars;\r\n  };\r\n\r\n  return (\r\n    <div className='software-rating'>\r\n      <h2>Rating</h2>\r\n      <div className='average-rating'>\r\n        <span className='rating-qty'>{average_rating}</span>\r\n        <Stars averageRating={average_rating} />\r\n      </div>\r\n\r\n      <RatingsList totalStars={getTotalStars()} stars_count={stars_count} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoftwareRating;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction Review(props) {\r\n  const {\r\n    review,\r\n    maxLength,\r\n    maxLengthDifference,\r\n    softwareID,\r\n    fromSoftwareDetailsPage,\r\n    noReviewsPage,\r\n  } = props;\r\n  const lengthDifference = review.review.length - maxLength;\r\n\r\n  return (\r\n    <li className='review'>\r\n      <div className='review__info'>\r\n        <span className='reviewer'></span>\r\n        {review.username}\r\n        <span className='review-date'>{review.date}</span>\r\n      </div>\r\n      <div className='review__rating-type'>\r\n        <span className='rating-qty'>{review.rating}</span>\r\n        <img src='/images/red star.svg' alt='red star' />\r\n      </div>\r\n      <p className='review__para'>\r\n        {lengthDifference > maxLengthDifference\r\n          ? `${review.review.slice(0, maxLength)} ....`\r\n          : review.review}\r\n      </p>\r\n      {lengthDifference > maxLengthDifference ? (\r\n        <Link\r\n          className='see-more-link'\r\n          to={{\r\n            pathname: `/software_details/${softwareID}/reviews/${review.id}`,\r\n            state: {\r\n              fromSoftwareDetailsPage,\r\n              noReviewsPage\r\n            },\r\n          }}\r\n        >\r\n          See more\r\n        </Link>\r\n      ) : null}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Review;\r\n","import Review from './Review';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ReviewsList({\r\n  reviews,\r\n  softwareID,\r\n  fromSoftwareDetailsPage,\r\n  noReviewsPage,\r\n}) {\r\n  const data = {\r\n    maxLength: 300,\r\n    maxLengthDifference: 100,\r\n  };\r\n\r\n  return (\r\n    <ul className='reviews__list'>\r\n      {reviews.map(review => (\r\n        <Review\r\n          review={review}\r\n          key={uuidv4()}\r\n          {...data}\r\n          softwareID={softwareID}\r\n          fromSoftwareDetailsPage={\r\n            fromSoftwareDetailsPage ? fromSoftwareDetailsPage : false\r\n          }\r\n          noReviewsPage={noReviewsPage ? noReviewsPage : false}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ReviewsList;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction ReviewsLink({ softwareID }) {\r\n  return (\r\n    <Link\r\n      className='reviews-link'\r\n      to={`/software_details/${softwareID}/reviews`}\r\n    >\r\n      {' '}\r\n      See all reviews\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ReviewsLink;\r\n","import ReviewsList from '../../../common components/reviews/review list/ReviewsList';\r\nimport RateLink from '../../../common components/common links/RateLink';\r\nimport ReviewsLink from '../../../common components/common links/ReviewsLink';\r\nimport ReviewsCount from '../../../common components/reviews/reviews count/ReviewsCount';\r\n\r\nfunction ReviewsSection({ software, reviews }) {\r\n  return (\r\n    <section className='reviews'>\r\n      <h2 className='reviews-heading'>Reviews</h2>\r\n      <p className='ask-for-review-para'>Write a review by rating this app</p>\r\n      <RateLink\r\n        softwareID={software.id}\r\n      />\r\n\r\n      <div className='review-feedback-content'>\r\n        <ReviewsCount total_reviews={software.total_reviews} />\r\n        {software.total_reviews <= 3 ? null : (\r\n          <ReviewsLink softwareID={software.id} />\r\n        )}\r\n      </div>\r\n\r\n      <ReviewsList\r\n        reviews={reviews.slice(0, 3)}\r\n        softwareID={software.id}\r\n        fromSoftwareDetailsPage={true}\r\n        noReviewsPage={reviews.length <= 3 ? true : false}\r\n      />\r\n\r\n      {software.total_reviews <= 3 ? null : (\r\n        <ReviewsLink softwareID={software.id} />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ReviewsSection;\r\n","import { Link } from 'react-router-dom';\r\nimport HomeLink from '../../common/home link/HomeLink';\r\nimport SoftwareInfo from './page components/software info/SoftwareInfo';\r\nimport SoftwareDescription from './page components/software rating and description/software description/SoftwareDescription';\r\nimport SoftwareRating from './page components/software rating and description/software rating/SoftwareRating';\r\nimport ReviewsSection from './page components/reviews section/ReviewsSection';\r\n\r\nfunction SoftwareDetailsPage(props) {\r\n  const {\r\n    name,\r\n    developer,\r\n    average_rating,\r\n    total_reviews,\r\n    stars_count,\r\n    id,\r\n    description,\r\n  } = props.software;\r\n  const { reviews, reviewsFetched } = props;\r\n\r\n  return (\r\n    <div className='wrapper software-details-wrapper'>\r\n      <div className='breadcrumbs'>\r\n        <HomeLink isActive={false} />\r\n        <span> \\ </span>\r\n        <Link\r\n          className='page-link active-page-link'\r\n          to={`/software_details/${id}`}\r\n        >\r\n          {name}\r\n        </Link>\r\n      </div>\r\n      \r\n      <SoftwareInfo\r\n        name={name}\r\n        developer={developer}\r\n        average_rating={average_rating}\r\n        total_reviews={total_reviews}\r\n        id={id}\r\n      />\r\n\r\n      <section className='software-description-and-rating'>\r\n        <SoftwareDescription description={description} />\r\n        <SoftwareRating\r\n          average_rating={average_rating}\r\n          stars_count={stars_count}\r\n        />\r\n      </section>\r\n\r\n      {reviewsFetched ? (\r\n        <ReviewsSection\r\n          software={{\r\n            name,\r\n            developer,\r\n            total_reviews,\r\n            id,\r\n          }}\r\n          reviews={reviews}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoftwareDetailsPage;\r\n","import React from 'react';\r\nexport const CanUserReviewContext = React.createContext();\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction AlreadyRatedMessage({ softwareID }) {\r\n  return (\r\n    <div className='already-rated-modal-wrapper'>\r\n      <section className='already-rated-modal'>\r\n        <p>\r\n          You have already rated this software. Go to ratings page to edit your\r\n          rating.\r\n        </p>\r\n        <div className='cta-btns'>\r\n          <Link className='exit-btn' to={`/software_details/${softwareID}`}>\r\n            Exit\r\n          </Link>\r\n          <Link className='edit-btn' to='/rated_apps'>\r\n            Edit ratings\r\n          </Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlreadyRatedMessage;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction ConfirmationModal({ softwareID, setCanUserReview }) {\r\n  const handleClick = () => setCanUserReview(false);\r\n\r\n  return (\r\n    <div className='confirmation-modal-overlay'>\r\n      <div className='confirmation-modal'>\r\n        <p>Feedback submitted!</p>\r\n        <div className='confirmation-modal__buttons'>\r\n          <Link to='/' onClick={handleClick}>\r\n            Home\r\n          </Link>\r\n          <Link to={`/software_details/${softwareID}`} onClick={handleClick}>\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmationModal;\r\n","function RatingStar({ setRating, starNumber, starType }) {\r\n  const handleClick = event => {\r\n    event.preventDefault();\r\n    setRating(starNumber);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <a href='a' onClick={handleClick}>\r\n        <img\r\n          className='star'\r\n          src={`/images/${starType} star.svg`}\r\n          alt={`${starType} star`}\r\n        />\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default RatingStar;\r\n","import RatingStar from './RatingStar';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction RatingStarsList({ rating, setRating }) {\r\n  const getStarTypes = () => {\r\n    const starTypes = [];\r\n    for (let starNumber = 0; starNumber < rating; starNumber++) {\r\n      starTypes.push('red');\r\n    }\r\n    for (let starNumber = rating; starNumber < 5; starNumber++) {\r\n      starTypes.push('white');\r\n    }\r\n    return starTypes;\r\n  };\r\n\r\n  return (\r\n    <ul className='stars-list'>\r\n      {getStarTypes().map((starType, index) => (\r\n        <RatingStar\r\n          setRating={setRating}\r\n          starType={starType}\r\n          starNumber={index + 1}\r\n          key={uuidv4()}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RatingStarsList;\r\n","import RatingStarsList from '../../../../../../common/rating stars list/RatingStarsList';\r\n\r\nfunction RatingInput(props) {\r\n  return (\r\n    <div className='rate'>\r\n      <h2>\r\n        Rate <span className='required-arterisk'>*</span>\r\n      </h2>\r\n      <RatingStarsList {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatingInput;\r\n","function ReviewLimitMessage({ maxReviewLength }) {\r\n  return (\r\n    <p className='review-limit-msg'>\r\n      * Reached max characters ({maxReviewLength}) for review.\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default ReviewLimitMessage;\r\n","import { Component } from 'react';\r\nimport RatingInput from './rating input/RatingInput';\r\nimport { softwares } from '../../../../../../database/Softwares';\r\nimport WaitMessage from '../../../../../common/wait message/WaitMessage';\r\nimport ReviewLimitMessage from './limit message/ReviewLimitMessage';\r\nimport { user } from '../../../../../../database/User';\r\n\r\nclass ReviewForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      review: '',\r\n      rating: 0,\r\n      onWait: false,\r\n    };\r\n    this.data = {\r\n      maxReviewLength: 3000,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setRating = this.setRating.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.addSoftwareToUserReviews = this.addSoftwareToUserReviews.bind(this);\r\n    this.incrementTotalReviews = this.incrementTotalReviews.bind(this);\r\n    this.incrementStarCount = this.incrementStarCount.bind(this);\r\n    this.updateAverageRating = this.updateAverageRating.bind(this);\r\n    this.afterSave = this.afterSave.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  setRating(rating) {\r\n    this.setState({\r\n      rating,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.wait();\r\n  }\r\n\r\n  wait() {\r\n    this.setState(\r\n      {\r\n        onWait: true,\r\n      },\r\n      this.saveData\r\n    );\r\n  }\r\n\r\n  saveData() {\r\n    const { rating, review } = this.state;\r\n    const { softwareID } = this.props;\r\n    softwares\r\n      .writeRating(softwareID, {\r\n        username: user.name,\r\n        rating,\r\n        review,\r\n      })\r\n      .then(this.addSoftwareToUserReviews);\r\n    review === '' ? this.incrementStarCount() : this.incrementTotalReviews();\r\n  }\r\n\r\n  addSoftwareToUserReviews() {\r\n    const { softwareID, getUpdatedUserReviews } = this.props;\r\n    user.addSoftwareToReviews(softwareID).then(() => {\r\n      getUpdatedUserReviews();\r\n      user.bindUpdaterToReviews(getUpdatedUserReviews);\r\n    });\r\n  }\r\n\r\n  incrementTotalReviews() {\r\n    const { softwareID } = this.props;\r\n    softwares.incrementTotalReviews(softwareID).then(this.incrementStarCount);\r\n  }\r\n\r\n  incrementStarCount() {\r\n    const { softwareID } = this.props;\r\n    const { rating } = this.state;\r\n    softwares.updateStarCount(softwareID, rating, 'INC').then(\r\n      this.updateAverageRating\r\n    );\r\n  }\r\n\r\n  updateAverageRating() {\r\n    const { softwareID } = this.props;\r\n    softwares.updateAverageRating(softwareID).then(this.afterSave);\r\n  }\r\n\r\n  afterSave() {\r\n    const { showConfirmationModal, updateSoftware, softwareID } = this.props;\r\n    updateSoftware(softwareID);\r\n\r\n    this.setState(\r\n      {\r\n        review: '',\r\n        rating: 0,\r\n        onWait: false,\r\n      },\r\n      showConfirmationModal\r\n    );\r\n  }\r\n\r\n  isIncomplete() {\r\n    const { rating, review } = this.state;\r\n    const { maxReviewLength } = this.data;\r\n    return rating === 0 || review.length >= maxReviewLength;\r\n  }\r\n\r\n  render() {\r\n    const { rating, review, onWait } = this.state;\r\n    const { maxReviewLength } = this.data;\r\n\r\n    return (\r\n      <form className='review-form' onSubmit={this.handleSubmit}>\r\n        <RatingInput setRating={this.setRating} rating={rating} />\r\n        <div>\r\n          <label htmlFor='review'>Review (optional) </label>\r\n          {review.length >= maxReviewLength ? (\r\n            <ReviewLimitMessage maxReviewLength={maxReviewLength} />\r\n          ) : null}\r\n          <textarea\r\n            name='review'\r\n            id='review'\r\n            placeholder='Tell us your experience with the app'\r\n            onChange={this.handleChange}\r\n            value={review}\r\n            maxLength={maxReviewLength}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button\r\n          type='submit'\r\n          className={`submit-btn${\r\n            this.isIncomplete() ? ' submit-btn--disabled' : ''\r\n          }`}\r\n        >\r\n          Submit\r\n        </button>\r\n        {onWait ? <WaitMessage /> : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewForm;\r\n","import SoftwareBasicInfo from '../../../../../common/software basic info/SoftwareBasicInfo';\r\n\r\nfunction Software({name, developer}) {\r\n  return (\r\n    <section className='software'>\r\n      <SoftwareBasicInfo name={name} developer={developer} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Software\r\n","import React from 'react';\r\nexport let UserReviewsContext = React.createContext();\r\n","import React from 'react';\r\nexport const UpdateSoftwareContext = React.createContext();\r\n\r\n","import ConfirmationModal from './page components/confirmation modal/ConfirmationModal';\r\nimport ReviewForm from './page components/review form/ReviewForm';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeLink from '../../../common/home link/HomeLink';\r\nimport Software from './page components/software info/Software';\r\nimport { UserReviewsContext } from '../../../../context/UserReviewsContext';\r\nimport { UpdateSoftwareContext } from '../../../../context/UpdateSoftwareContext';\r\n\r\nfunction RatePage(props) {\r\n  const {\r\n    name,\r\n    developer,\r\n    id,\r\n    formSubmitted,\r\n    setCanUserReview,\r\n    showConfirmationModal,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='wrapper rate-wrapper'>\r\n      <div className='breadcrumbs'>\r\n        <HomeLink isActive={false} />\r\n        <span> \\ </span>\r\n        <Link className='page-link' to={`/software_details/${id}`}>\r\n          {name}\r\n        </Link>\r\n        <span> \\ </span>\r\n        <Link\r\n          className='page-link active-page-link'\r\n          to={`/software_details/${id}/rate`}\r\n        >\r\n          Rate\r\n        </Link>\r\n      </div>\r\n\r\n      <Software name={name} developer={developer} />\r\n\r\n      <UserReviewsContext.Consumer>\r\n        {({ getUpdatedUserReviews }) => (\r\n          <UpdateSoftwareContext.Consumer>\r\n            {updateSoftware => (\r\n              <ReviewForm\r\n                showConfirmationModal={showConfirmationModal}\r\n                softwareID={id}\r\n                getUpdatedUserReviews={getUpdatedUserReviews}\r\n                updateSoftware={updateSoftware}\r\n              />\r\n            )}\r\n          </UpdateSoftwareContext.Consumer>\r\n        )}\r\n      </UserReviewsContext.Consumer>\r\n\r\n      {formSubmitted ? (\r\n        <ConfirmationModal\r\n          softwareID={id}\r\n          setCanUserReview={setCanUserReview}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatePage;\r\n","import { Component } from 'react';\r\nimport { CanUserReviewContext } from '../../../../context/CanUserReviewContext';\r\nimport AlreadyRatedMessage from './already rated message/AlreadyRatedMessage';\r\nimport RatePage from './RatePage';\r\n\r\nclass RatePageLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formSubmitted: false,\r\n    };\r\n\r\n    this.showConfirmationModal = this.showConfirmationModal.bind(this);\r\n  }\r\n\r\n  showConfirmationModal() {\r\n    this.setState({\r\n      formSubmitted: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, developer, id } = this.props.software;\r\n    const { formSubmitted } = this.state;\r\n\r\n    return (\r\n      <CanUserReviewContext.Consumer>\r\n        {value =>\r\n          value.canUserReview ? (\r\n            <RatePage\r\n              name={name}\r\n              id={id}\r\n              developer={developer}\r\n              formSubmitted={formSubmitted}\r\n              showConfirmationModal={this.showConfirmationModal}\r\n              setCanUserReview={value.setCanUserReview}\r\n            />\r\n          ) : (\r\n            <AlreadyRatedMessage softwareID={id} />\r\n          )\r\n        }\r\n      </CanUserReviewContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatePageLogic;\r\n","import SoftwareBasicInfo from '../../../../../common/software basic info/SoftwareBasicInfo';\r\n\r\nfunction SoftwareInfo(props) {\r\n  return (\r\n    <section className='software'>\r\n      <SoftwareBasicInfo {...props} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SoftwareInfo;\r\n","import { Component } from 'react';\r\n\r\nclass FilterRatingForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: 'all',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState(\r\n      {\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      this.filterReviews\r\n    );\r\n  }\r\n\r\n  filterReviews() {\r\n    const { category } = this.state;\r\n    this.props.filterReviews(category);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='filter-rating-form'>\r\n        <div>\r\n          <label htmlFor='category'>Stars</label>\r\n          <select\r\n            name='category'\r\n            id='category'\r\n            onChange={this.handleChange}\r\n            value={this.state.category}\r\n          >\r\n            <option value='all'>All</option>\r\n            <option value='5'>\r\n              5 &nbsp;&nbsp; &#9733; &#9733; &#9733; &#9733; &#9733;\r\n            </option>\r\n            <option value='4'>\r\n              4 &nbsp;&nbsp; &#9733; &#9733; &#9733; &#9733;\r\n            </option>\r\n            <option value='3'>3 &nbsp;&nbsp; &#9733; &#9733; &#9733;</option>\r\n            <option value='2'>2 &nbsp;&nbsp; &#9733; &#9733;</option>\r\n            <option value='1'>1 &nbsp;&nbsp; &#9733;</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterRatingForm;\r\n","import ReviewsCount from '../../../../../common components/reviews/reviews count/ReviewsCount';\r\nimport FilterRatingForm from './filter rating form/FilterRatingForm';\r\n\r\nfunction ReviewsInfo({ filterReviews, total_reviews }) {\r\n  return (\r\n    <div className='reviews__info'>\r\n      <ReviewsCount total_reviews={total_reviews} />\r\n      <FilterRatingForm filterReviews={filterReviews} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsInfo;\r\n","import { Component } from 'react';\r\nimport SoftwareInfo from './page components/software info/SoftwareInfo';\r\nimport ReviewsList from '../../common components/reviews/review list/ReviewsList';\r\nimport Pages from '../../../common/pages/Pages';\r\nimport RateLink from '../../common components/common links/RateLink';\r\nimport ReviewsInfo from './page components/reviews section/reviews info/ReviewsInfo';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeLink from '../../../common/home link/HomeLink';\r\n\r\nclass ReviewsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      star: 'all',\r\n      reviews: this.props.reviews,\r\n    };\r\n    this.data = {\r\n      reviewsPerPage: 12,\r\n    };\r\n    this.filterReviews = this.filterReviews.bind(this);\r\n    this.updateCurrentPage = this.updateCurrentPage.bind(this);\r\n  }\r\n\r\n  updateCurrentPage(newPageNumber) {\r\n    this.setState({\r\n      currentPage: newPageNumber,\r\n    });\r\n  }\r\n\r\n  filterReviews(category) {\r\n    const { reviews } = this.props;\r\n    this.setState(state => {\r\n      return {\r\n        reviews:\r\n          category === 'all'\r\n            ? reviews\r\n            : reviews.filter(\r\n                review => review.rating === Number.parseInt(category)\r\n              ),\r\n        currentPage: 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  getReviewsForCurrentPage() {\r\n    const { reviews } = this.state;\r\n    const { reviewsPerPage } = this.data;\r\n    return reviews.slice(\r\n      this.getInitialReviewIndexForCurrentPage(),\r\n      this.getInitialReviewIndexForCurrentPage() + reviewsPerPage\r\n    );\r\n  }\r\n  getInitialReviewIndexForCurrentPage() {\r\n    const { reviewsPerPage } = this.data;\r\n    const { currentPage } = this.state;\r\n    return (currentPage - 1) * reviewsPerPage;\r\n  }\r\n\r\n  render() {\r\n    const { software } = this.props;\r\n    const { reviews } = this.state;\r\n    const { reviewsPerPage } = this.data;\r\n\r\n    return (\r\n      <div className='wrapper reviews-wrapper'>\r\n        <div className='breadcrumbs'>\r\n          <HomeLink isActive={false} />\r\n          <span> \\ </span>\r\n          <Link className='page-link' to={`/software_details/${software.id}`}>\r\n            {software.name}\r\n          </Link>\r\n          <span> \\ </span>\r\n          <Link\r\n            className='page-link active-page-link'\r\n            to={`/software_details/${software.id}/reviews`}\r\n          >\r\n            Reviews\r\n          </Link>\r\n        </div>\r\n\r\n        <SoftwareInfo name={software.name} developer={software.developer} />\r\n\r\n        <section className='reviews'>\r\n          <h2 className='reviews-heading'>Reviews</h2>\r\n          <p className='ask-for-review-para'>\r\n            Write a review by rating this app\r\n          </p>\r\n\r\n          <RateLink\r\n            softwareID={software.id}\r\n          />\r\n\r\n          <ReviewsInfo\r\n            filterReviews={this.filterReviews}\r\n            total_reviews={reviews.length}\r\n          />\r\n\r\n          <ReviewsList\r\n            reviews={this.getReviewsForCurrentPage()}\r\n            softwareID={software.id}\r\n          />\r\n          {reviews.length === 0 ? null : (\r\n            <Pages\r\n              totalItems={reviews.length}\r\n              itemsPerPage={reviewsPerPage}\r\n              currentPage={this.state.currentPage}\r\n              updateCurrentPage={this.updateCurrentPage}\r\n            />\r\n          )}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewsPage;\r\n","import Review from '../../../common components/reviews/review list/Review';\r\nimport SoftwareBasicInfo from '../../../../common/software basic info/SoftwareBasicInfo';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeLink from '../../../../common/home link/HomeLink';\r\nimport { Fragment } from 'react';\r\n\r\nfunction CompleteReview({\r\n  review,\r\n  fromSoftwareDetailsPage,\r\n  software,\r\n  noReviewsPage,\r\n}) {\r\n  const { name, developer, id } = software;\r\n  return (\r\n    <div className='wrapper review-wrapper'>\r\n      <div className='breadcrumbs'>\r\n        <HomeLink isActive={false} />\r\n        <span> \\ </span>\r\n        <Link className='page-link' to={`/software_details/${id}`}>\r\n          {name}\r\n        </Link>\r\n        <span> \\ </span>\r\n        {noReviewsPage ? null : (\r\n          <Fragment>\r\n            <Link className='page-link' to={`/software_details/${id}/reviews`}>\r\n              {' '}\r\n              Reviews\r\n            </Link>\r\n            <span> \\ </span>\r\n          </Fragment>\r\n        )}\r\n        <Link\r\n          className='page-link active-page-link'\r\n          to={{\r\n            pathname: `/software_details/${id}/reviews/${review.id}`,\r\n            state: {\r\n              fromSoftwareDetailsPage: fromSoftwareDetailsPage\r\n                ? fromSoftwareDetailsPage\r\n                : false,\r\n              noReviewsPage: noReviewsPage ? noReviewsPage : false,\r\n            },\r\n          }}\r\n        >\r\n          {' '}\r\n          Review\r\n        </Link>\r\n      </div>\r\n\r\n      <section className='software'>\r\n        <SoftwareBasicInfo name={name} developer={developer} />\r\n      </section>\r\n\r\n      <Link\r\n        className='back-link'\r\n        to={`${\r\n          fromSoftwareDetailsPage\r\n            ? `/software_details/${id}`\r\n            : `/software_details/${id}/reviews`\r\n        }`}\r\n      >\r\n        <img src='/images/back arrow.svg' alt='back arrow' /> <span>Back</span>\r\n      </Link>\r\n      <Review review={review} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompleteReview;\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport ReviewsPage from '../page/ReviewsPage';\r\nimport CompleteReview from '../complete review/page/CompleteReview';\r\n\r\nfunction ReviewsRouter(props) {\r\n  const getReview = id => {\r\n    const { reviews } = props;\r\n    return reviews.find(review => review.id === id);\r\n  };\r\n\r\n  const { software } = props;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path='/software_details/:id/reviews'\r\n        exact\r\n        render={() => <ReviewsPage {...props} />}\r\n      />\r\n      <Route\r\n        path='/software_details/:id/reviews/:userID'\r\n        exact\r\n        render={props => {\r\n          const { userID } = props.match.params;\r\n          const { fromSoftwareDetailsPage, noReviewsPage } =\r\n            props.location.state;\r\n          return (\r\n            <CompleteReview\r\n              software={software}\r\n              review={getReview(userID)}\r\n              fromSoftwareDetailsPage={\r\n                fromSoftwareDetailsPage ? fromSoftwareDetailsPage : false\r\n              }\r\n              noReviewsPage={noReviewsPage ? noReviewsPage : false}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default ReviewsRouter;\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport SoftwareDetailsPage from '../page/SoftwareDetailsPage';\r\nimport RatePageLogic from '../rate/page/RatePageLogic';\r\nimport ReviewsRouter from '../reviews/router/ReviewsRouter';\r\n\r\nfunction SoftwareDetailsRouter(props) {\r\n  const { reviews, software } = props;\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path='/software_details/:id/reviews'\r\n        render={() => <ReviewsRouter software={software} reviews={reviews} />}\r\n      />\r\n      <Route\r\n        path='/software_details/:id/rate'\r\n        exact\r\n        render={() => <RatePageLogic software={software} />}\r\n      />\r\n      <Route\r\n        path='/software_details/:id'\r\n        exact\r\n        render={() => <SoftwareDetailsPage {...props} />}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default SoftwareDetailsRouter;\r\n","import { Component } from 'react';\r\n\r\nimport { softwares } from '../../../database/Softwares';\r\nimport SoftwareDetailsRouter from './SoftwareDetailsRouter';\r\nimport { user } from '../../../database/User';\r\nimport { CanUserReviewContext } from '../../../context/CanUserReviewContext';\r\n\r\nclass SoftwareDetailsRouterLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reviews: [],\r\n      reviewsFetched: false,\r\n      canUserReview: false,\r\n    };\r\n    this.getReviews = this.getReviews.bind(this);\r\n    this.setCanUserReview = this.setCanUserReview.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getReviews();\r\n    const { id } = this.props.software;\r\n    if (user.isSignedin())\r\n      user\r\n        .canReview(id)\r\n        .then(canUserReview => this.setCanUserReview(canUserReview));\r\n  }\r\n\r\n  setCanUserReview(canUserReview) {\r\n    const { id } = this.props.software;\r\n    if (canUserReview) softwares.bindUpdaterToReview(id, this.getReviews);\r\n    this.setState({\r\n      canUserReview,\r\n    });\r\n  }\r\n\r\n  getReviews() {\r\n    this.waitForReviews();\r\n    const { id } = this.props.software;\r\n    softwares.getReviews(id, reviews => {\r\n      this.setState({\r\n        reviews,\r\n        reviewsFetched: true,\r\n      });\r\n    });\r\n  }\r\n\r\n  waitForReviews() {\r\n    this.setState({\r\n      reviewsFetched: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CanUserReviewContext.Provider\r\n        value={{\r\n          canUserReview: this.state.canUserReview,\r\n          setCanUserReview: this.setCanUserReview,\r\n        }}\r\n      >\r\n        <SoftwareDetailsRouter {...this.props} {...this.state} />\r\n      </CanUserReviewContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SoftwareDetailsRouterLogic;\r\n","function NoRatingsMessage() {\r\n  return <p className='no-ratings-msg'>No ratings to show</p>;\r\n}\r\n\r\nexport default NoRatingsMessage;\r\n","function EditableFormButtons({ reset, handleSubmit }) {\r\n  const save = event => {\r\n    event.preventDefault();\r\n    handleSubmit();\r\n  };\r\n\r\n  const _reset = event => {\r\n    event.preventDefault();\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className='past-review__ctas'>\r\n      <a href='cancel' className='cancel-btn' onClick={_reset}>\r\n        Cancel\r\n      </a>\r\n      <a href='save' className='save-btn' onClick={save}>\r\n        Save\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableFormButtons;\r\n","function NonEditableFormButtons({ setEditable, handleDelete, clickable }) {\r\n  const edit = event => {\r\n    event.preventDefault();\r\n    setEditable(true);\r\n  };\r\n\r\n  const del = event => {\r\n    event.preventDefault();\r\n    handleDelete();\r\n  };\r\n\r\n  return (\r\n    <div className='past-review__ctas'>\r\n      <a href='edit' className='edit-btn tooltip' onClick={edit}>\r\n        <img src='/images/edit.svg' alt='pencil' />\r\n        <span className='tooltip-text'>Edit</span>\r\n      </a>\r\n      <a href='delete' className='delete-btn tooltip' onClick={del}>\r\n        <img src='/images/delete.svg' alt='dustbin' />\r\n        <span className='tooltip-text'>Delete</span>\r\n      </a>\r\n      {clickable ? null : <div className='past-review__ctas__wrapper'> </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NonEditableFormButtons;\r\n","import RatingStarsList from '../../../../../../common/rating stars list/RatingStarsList';\r\n\r\nfunction EditRatingForm(props) {\r\n  const { review, rating, handleChange, editable, setRating } = props;\r\n\r\n  return (\r\n    <form className='past-review__form'>\r\n      <div className='stars-list-parent'>\r\n        <RatingStarsList rating={rating} setRating={setRating} />\r\n        <div className={editable ? '' : `stars-list-cover`}></div>\r\n      </div>\r\n      <textarea\r\n        className='past-review__text'\r\n        name='review'\r\n        value={review}\r\n        onChange={handleChange}\r\n        disabled={editable ? false : true}\r\n      ></textarea>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditRatingForm;\r\n","import { Component } from 'react';\r\nimport SoftwareLogo from '../../../../../common/software basic info/software logo and details/SoftwareLogo';\r\nimport EditableFormButtons from './edit rating form/cta buttons/EditableFormButtons';\r\nimport NonEditableFormButtons from './edit rating form/cta buttons/NonEditableFormButtons';\r\nimport EditRatingForm from './edit rating form/EditRatingForm';\r\nimport { user } from '../../../../../../database/User';\r\nimport { softwares } from '../../../../../../database/Softwares';\r\n\r\nclass PastRating extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { rating, review } = this.props.userReview;\r\n    this.state = {\r\n      rating,\r\n      review,\r\n      editable: false,\r\n      error: false,\r\n      clickable: true,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setRating = this.setRating.bind(this);\r\n    this.setEditable = this.setEditable.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.hideNoChangeMessage = this.hideNoChangeMessage.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.updateSoftware = this.updateSoftware.bind(this);\r\n    this.updateStarCount = this.updateStarCount.bind(this);\r\n    this.updateSoftwareLocal = this.updateSoftwareLocal.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    if (this.reviewUpdated()) {\r\n      const { softwareID } = this.props.userReview;\r\n      const { rating, review } = this.state;\r\n      user.updateReview(softwareID, { rating, review });\r\n      this.updateSoftware();\r\n    } else {\r\n      this.showNoChangeMessage();\r\n    }\r\n  }\r\n\r\n  reviewUpdated() {\r\n    const { review, rating } = this.state;\r\n    const { userReview } = this.props;\r\n    return review !== userReview.review || rating !== userReview.rating;\r\n  }\r\n\r\n  updateSoftware() {\r\n    this.updateTotalReviews()\r\n      .then(this.updateStarCount)\r\n      .then(this.updateSoftwareLocal)\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  updateTotalReviews() {\r\n    const { softwareID } = this.props.userReview;\r\n\r\n    if (this.shouldDecrementTotalReviews())\r\n      return softwares.decrementTotalReviews(softwareID);\r\n    if (this.shouldIncrementTotalReviews())\r\n      return softwares.incrementTotalReviews(softwareID);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  shouldDecrementTotalReviews() {\r\n    const { review } = this.state;\r\n    return review === '' && review !== this.props.userReview.review;\r\n  }\r\n\r\n  shouldIncrementTotalReviews() {\r\n    const { review } = this.state;\r\n    return review !== '' && this.props.userReview.review === '';\r\n  }\r\n\r\n  updateStarCount() {\r\n    if (this.shouldChangeStarCount()) {\r\n      const { softwareID } = this.props.userReview;\r\n      const { rating } = this.state;\r\n      return softwares\r\n        .replaceStarCount(softwareID, rating, this.props.userReview.rating)\r\n        .then(() => softwares.updateAverageRating(softwareID));\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  shouldChangeStarCount() {\r\n    const { rating } = this.state;\r\n    return rating !== this.props.userReview.rating;\r\n  }\r\n\r\n  updateSoftwareLocal() {\r\n    const { softwareID } = this.props.userReview;\r\n    this.props.updateSoftware(softwareID);\r\n  }\r\n\r\n  handleDelete() {\r\n    this.setState(\r\n      {\r\n        clickable: false,\r\n      },\r\n      this.deleteReview\r\n    );\r\n  }\r\n\r\n  deleteReview() {\r\n    const { rating, review } = this.state;\r\n    const { softwareID } = this.props.userReview;\r\n    const { getUpdatedUserReviews } = this.props;\r\n    user.deleteReview(softwareID).then(() => {\r\n      getUpdatedUserReviews();\r\n      if (review !== '') softwares.decrementTotalReviews(softwareID);\r\n      softwares\r\n        .updateStarCount(softwareID, rating, 'DEC')\r\n        .then(() => softwares.updateAverageRating(softwareID))\r\n        .then(this.updateSoftwareLocal);\r\n    });\r\n  }\r\n\r\n  setRating(rating) {\r\n    this.setState({\r\n      rating,\r\n    });\r\n  }\r\n\r\n  setEditable(value) {\r\n    this.setState({\r\n      editable: value,\r\n    });\r\n  }\r\n\r\n  showNoChangeMessage() {\r\n    this.setState(\r\n      {\r\n        error: true,\r\n      },\r\n      () => setTimeout(this.hideNoChangeMessage, 3000)\r\n    );\r\n  }\r\n\r\n  hideNoChangeMessage() {\r\n    this.setState({\r\n      error: false,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    const { rating, review } = this.props.userReview;\r\n    this.setState({\r\n      rating,\r\n      review,\r\n      editable: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { date, softwareName } = this.props.userReview;\r\n    const { editable, rating, review, error, clickable } = this.state;\r\n\r\n    return (\r\n      <li className='past-review'>\r\n        <div className='past-review__basic-info-and-ctas'>\r\n          <div className='past-review__software'>\r\n            <SoftwareLogo name={softwareName} />\r\n            <div className='software__details'>\r\n              <p className='software__name'>{softwareName}</p>\r\n              <p className='software__review-date'>{date}</p>\r\n            </div>\r\n          </div>\r\n          {editable ? (\r\n            <EditableFormButtons\r\n              reset={this.reset}\r\n              handleSubmit={this.handleSubmit}\r\n            />\r\n          ) : (\r\n            <NonEditableFormButtons\r\n              setEditable={this.setEditable}\r\n              handleDelete={this.handleDelete}\r\n              clickable={clickable}\r\n            />\r\n          )}\r\n        </div>\r\n        {error ? <p className='no-change-msg'>* No change To update</p> : null}\r\n        <EditRatingForm\r\n          rating={rating}\r\n          review={review}\r\n          editable={editable}\r\n          handleChange={this.handleChange}\r\n          setRating={this.setRating}\r\n          textInputRef={this.textInputRef}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PastRating;\r\n","import { Fragment } from 'react';\r\nimport PastRating from './past rating/PastRating';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { UpdateSoftwareContext } from '../../../../../context/UpdateSoftwareContext';\r\nimport WaitMessage from '../../../../common/wait message/WaitMessage';\r\n\r\nfunction PastRatingsList(props) {\r\n  const { userReviews, fetchingUserReviews, getUpdatedUserReviews } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      {fetchingUserReviews ? (\r\n        <WaitMessage />\r\n      ) : (\r\n        <ul className='past-reviews-list'>\r\n          <UpdateSoftwareContext.Consumer>\r\n            {updateSoftware => {\r\n              return userReviews.map(userReview => (\r\n                <PastRating\r\n                  userReview={userReview}\r\n                  updateSoftware={updateSoftware}\r\n                  getUpdatedUserReviews={getUpdatedUserReviews}\r\n                  key={uuidv4()}\r\n                />\r\n              ));\r\n            }}\r\n          </UpdateSoftwareContext.Consumer>\r\n        </ul>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PastRatingsList;\r\n","import { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeLink from '../../common/home link/HomeLink';\r\nimport Pages from '../../common/pages/Pages';\r\nimport NoRatingsMessage from './page components/no ratings message/NoRatingsMessage';\r\nimport PastRatingsList from './page components/past ratings list/PastRatingsList';\r\n\r\nfunction RatedAppsPage(props) {\r\n  const {\r\n    userReviews,\r\n    fetchingUserReviews,\r\n    getUpdatedUserReviews,\r\n    reviewsPerPage,\r\n    currentPage,\r\n    updateCurrentPage,\r\n    totalReviews,\r\n  } = props;\r\n  return (\r\n    <div className='wrapper rated-apps-wrapper'>\r\n      <header>\r\n        <div className='breadcrumbs'>\r\n          <HomeLink />\r\n          <span> \\ </span>\r\n          <Link className='page-link active-page-link' to='/rated_apps'>\r\n            Rated Apps\r\n          </Link>\r\n        </div>\r\n      </header>\r\n      {userReviews.length === 0 ? (\r\n        <NoRatingsMessage />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='ratings-h'>Your Ratings</h1>\r\n          <PastRatingsList\r\n            userReviews={userReviews}\r\n            getUpdatedUserReviews={getUpdatedUserReviews}\r\n            fetchingUserReviews={fetchingUserReviews}\r\n          />\r\n          <Pages\r\n            totalItems={totalReviews}\r\n            itemsPerPage={reviewsPerPage}\r\n            currentPage={currentPage}\r\n            updateCurrentPage={updateCurrentPage}\r\n          />\r\n        </Fragment>\r\n      )}{' '}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatedAppsPage;\r\n","import React, { Component } from 'react';\r\nimport RatedAppsPage from './RatedAppsPage';\r\n\r\nclass RatedAppsPageLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n    };\r\n    this.data = {\r\n      reviewsPerPage: 7,\r\n    };\r\n    this.updateCurrentPage = this.updateCurrentPage.bind(this);\r\n  }\r\n\r\n  updateCurrentPage(newPageNumber) {\r\n    this.setState({\r\n      currentPage: newPageNumber,\r\n    });\r\n  }\r\n\r\n  getReviewsForCurrentPage() {\r\n    const { userReviews } = this.props;\r\n    const { reviewsPerPage } = this.data;\r\n    return userReviews.slice(\r\n      this.getInitialReviewIndexForCurrentPage(),\r\n      this.getInitialReviewIndexForCurrentPage() + reviewsPerPage\r\n    );\r\n  }\r\n  getInitialReviewIndexForCurrentPage() {\r\n    const { reviewsPerPage } = this.data;\r\n    const { currentPage } = this.state;\r\n    return (currentPage - 1) * reviewsPerPage;\r\n  }\r\n\r\n  render() {\r\n    const { currentPage } = this.state;\r\n    const { fetchingUserReviews, getUpdatedUserReviews, userReviews } =\r\n      this.props;\r\n    const { reviewsPerPage } = this.data;\r\n    return (\r\n      <RatedAppsPage\r\n        reviewsPerPage={reviewsPerPage}\r\n        totalReviews={userReviews.length}\r\n        currentPage={currentPage}\r\n        updateCurrentPage={this.updateCurrentPage}\r\n        fetchingUserReviews={fetchingUserReviews}\r\n        getUpdatedUserReviews={getUpdatedUserReviews}\r\n        userReviews={this.getReviewsForCurrentPage()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RatedAppsPageLogic;\r\n","import { UserReviewsContext } from '../../../context/UserReviewsContext';\r\nimport RatedAppsPageLogic from './RatedAppsPageLogic';\r\n\r\nfunction RatedAppsContextConsumer() {\r\n  return (\r\n    <UserReviewsContext.Consumer>\r\n      {value => <RatedAppsPageLogic {...value} />}\r\n    </UserReviewsContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default RatedAppsContextConsumer;\r\n","import React from 'react';\r\n\r\nfunction FormError({ error }) {\r\n  return <p className='gateway-form__error'>* {error}</p>;\r\n}\r\n\r\nexport default FormError;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction BackLink({ from }) {\r\n  return (\r\n    <Link className='back-link' to={from}>\r\n      <img src='/images/back arrow.svg' alt='back arrow' /> <span>Back</span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default BackLink;\r\n","import WaitMessage from '../../../common/wait message/WaitMessage';\r\nimport FormError from '../../common components/FormError';\r\nimport BackLink from '../../common components/BackLink';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Signin(props) {\r\n  const {\r\n    email,\r\n    password,\r\n    handleChange,\r\n    handleSubmit,\r\n    hasError,\r\n    errorMsg,\r\n    onWait,\r\n    from,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='gateway-wrapper'>\r\n      <section className='gateway-form-section'>\r\n        <BackLink from={from} />\r\n        <form className='gateway-form' onSubmit={handleSubmit}>\r\n          <h1 className='main-h'>Sign In</h1>\r\n          <div>\r\n            <label htmlFor='email'>Email</label>\r\n            <input\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {hasError ? <FormError error={errorMsg} /> : null}\r\n\r\n          <input type='submit' className='submit-btn' />\r\n        </form>\r\n        <p className='gateway-para'>\r\n          Don’t have an account?{' '}\r\n          <Link\r\n            className='signup-link'\r\n            to={{\r\n              pathname: '/signup',\r\n              state: {\r\n                from,\r\n              },\r\n            }}\r\n          >\r\n            Sign up{' '}\r\n          </Link>{' '}\r\n          instead.\r\n        </p>\r\n      </section>\r\n      {onWait ? <WaitMessage /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { authorization } from '../../auth/Authorization';\r\nimport Signin from './Signin';\r\n\r\nclass SigninLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      hasError: false,\r\n      errorMsg: '',\r\n      onWait: false,\r\n      signedin: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onSignin = this.onSignin.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.validationCheck()\r\n      ? this.showError({ msg: 'Please fill all the form fields.' })\r\n      : this.signin();\r\n  }\r\n\r\n  validationCheck() {\r\n    const { email, password } = this.state;\r\n    return email === '' || password === '';\r\n  }\r\n\r\n  signin() {\r\n    const { email, password } = this.state;\r\n    authorization.signin({ email, password }, this.onSignin);\r\n    this.setState({\r\n      onWait: true,\r\n    });\r\n  }\r\n\r\n  onSignin(error) {\r\n    if (error) {\r\n      authorization.signout();\r\n      this.showError(error);\r\n    } else {\r\n      this.setState({\r\n        onWait: false,\r\n        hasError: false,\r\n        errorMsg: '',\r\n        signedin: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  showError(error) {\r\n    this.setState({\r\n      onWait: false,\r\n      hasError: true,\r\n      errorMsg: error.msg,\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { from } = this.props;\r\n    const { signedin } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {signedin ? <Redirect to='/' /> : null}\r\n        <Signin\r\n          {...this.state}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          from={from}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SigninLogic;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction EmailVerificationModal({ email }) {\r\n  return (\r\n    <div className='email-verification-modal-wrapper'>\r\n      <section className='email-verification-modal'>\r\n        <p>\r\n          We sent a verfication email to {email}. You can signin after verification.\r\n        </p>\r\n        <Link\r\n          to={{\r\n            pathname: '/signin',\r\n            state: {\r\n              from: '/',\r\n            },\r\n          }}\r\n        >\r\n          Sign in{' '}\r\n        </Link>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailVerificationModal;\r\n","import EmailVerificationModal from './page components/email verification modal/EmailVerificationModal';\r\nimport FormError from '../../common components/FormError';\r\nimport WaitMessage from '../../../common/wait message/WaitMessage';\r\nimport BackLink from '../../common components/BackLink';\r\nimport SigninLink from '../../../common/signin link/SigninLink';\r\n\r\nfunction Signup(props) {\r\n  const {\r\n    name,\r\n    email,\r\n    password,\r\n    signedUp,\r\n    hasError,\r\n    errorMsg,\r\n    onWait,\r\n    handleChange,\r\n    handleSubmit,\r\n    from,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='gateway-wrapper'>\r\n      <section className='gateway-form-section'>\r\n        <BackLink from={from} />\r\n        <form className='gateway-form' onSubmit={handleSubmit}>\r\n          <h1 className='main-h'>Sign Up</h1>\r\n          <div>\r\n            <label htmlFor='name'>Name</label>\r\n            <input\r\n              type='text'\r\n              id='name'\r\n              name='name'\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='email'>Email</label>\r\n            <input\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              placeholder='At least 6 characters long'\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {hasError ? <FormError error={errorMsg} /> : null}\r\n          <input type='submit' className='submit-btn' />\r\n        </form>\r\n        <p className='gateway-para'>\r\n          Already registered? <SigninLink from={from} />  instead.\r\n        </p>\r\n      </section>\r\n      {signedUp ? <EmailVerificationModal email={email} /> : null}\r\n      {onWait ? <WaitMessage /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import { Component} from 'react';\r\nimport { authorization } from '../../auth/Authorization';\r\nimport Signup from './Signup';\r\n\r\nclass SignupLogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      signedUp: false,\r\n      hasError: false,\r\n      errorMsg: '',\r\n      onWait: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onSignup = this.onSignup.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.validationCheck()\r\n      ? this.showError({ msg: 'Please fill all the form fields.' })\r\n      : this.signup();\r\n  }\r\n\r\n  validationCheck() {\r\n    const { email, password, name } = this.state;\r\n    return email === '' || password === '' || name === '';\r\n  }\r\n\r\n  signup() {\r\n    const { email, password, name } = this.state;\r\n    authorization.signup({ email, password, name }, this.onSignup);\r\n    this.setState({\r\n      onWait: true,\r\n    });\r\n  }\r\n\r\n  onSignup(error) {\r\n    if (error) {\r\n      this.showError(error);\r\n    } else {\r\n      this.setState({\r\n        onWait: false,\r\n        signedUp: true,\r\n        hasError: false,\r\n        errorMsg: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  showError(error) {\r\n    this.setState({\r\n      onWait: false,\r\n      hasError: true,\r\n      errorMsg: error.msg,\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { from } = this.props;\r\n\r\n    return (\r\n      <Signup\r\n        {...this.state}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        from={from}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupLogic;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport AccountPage from './account/page/AccountPage';\r\nimport MainPageLogic from './main/page/MainPageLogic';\r\nimport NotFound from './not found page/NotFound';\r\nimport SoftwareDetailsRouterLogic from './software details/router/SoftwareDetailsRouterLogic';\r\nimport RatedAppsContextConsumer from './rated apps/page/RatedAppsContextConsumer';\r\nimport SigninLogic from './gateway/pages/sign in/SigninLogic';\r\nimport SignupLogic from './gateway/pages/sign up/SignupLogic';\r\n\r\nfunction AppRouter(props) {\r\n  const { onWait, softwares } = props;\r\n\r\n  const getSoftware = id => softwares.find(software => software.id === id);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path='/'\r\n        exact\r\n        render={() => {\r\n          return <MainPageLogic onWait={onWait} softwares={softwares} />;\r\n        }}\r\n      />\r\n\r\n      <Route\r\n        path='/rated_apps'\r\n        exact\r\n        render={() => {\r\n          return <RatedAppsContextConsumer />;\r\n        }}\r\n      />\r\n\r\n      <Route\r\n        path='/account'\r\n        exact\r\n        render={() => {\r\n          return <AccountPage />;\r\n        }}\r\n      />\r\n\r\n      <Route\r\n        path='/signup'\r\n        exact\r\n        render={props => {\r\n          const { from } = props.location.state;\r\n          return <SignupLogic from={from} />;\r\n        }}\r\n      />\r\n\r\n      <Route\r\n        path='/signin'\r\n        exact\r\n        render={props => {\r\n          const { from } = props.location.state;\r\n          return <SigninLogic from={from} />;\r\n        }}\r\n      />\r\n\r\n      <Route\r\n        path='/software_details/:id'\r\n        render={props => {\r\n          const { id } = props.match.params;\r\n          const software = getSoftware(id);\r\n          return software ? (\r\n            <SoftwareDetailsRouterLogic software={software} />\r\n          ) : (\r\n            <NotFound />\r\n          );\r\n        }}\r\n      />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import { Component } from 'react';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport { softwares } from './database/Softwares';\nimport { authorization } from './components/gateway/auth/Authorization';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { user } from './database/User';\nimport { UserReviewsContext } from './context/UserReviewsContext';\nimport { UpdateSoftwareContext } from './context/UpdateSoftwareContext';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      softwares: [],\n      onWait: true,\n      loggedin: false,\n      userReviews: [],\n      fetchingUserReviews: false,\n    };\n    this.updateSoftware = this.updateSoftware.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.getUserReviews = this.getUserReviews.bind(this);\n  }\n\n  componentDidMount() {\n    softwares.getSoftwares(softwares =>\n      this.setState({\n        softwares: softwares,\n        onWait: false,\n      })\n    );\n    authorization.onLoginDetection(this.handleLogin);\n  }\n\n  updateSoftware(id) {\n    softwares.getSoftware(id, updatedSoftware => {\n      this.setState(state => ({\n        softwares: state.softwares.map(software => {\n          return software.id === updatedSoftware.id\n            ? updatedSoftware\n            : software;\n        }),\n      }));\n    });\n  }\n\n  handleLogin(loggedin) {\n    if (loggedin) user.set();\n    this.setState(\n      {\n        loggedin,\n      },\n      () => {\n        if (this.state.loggedin) {\n          this.getUserReviews();\n          user.bindUpdaterToReviews(this.getUserReviews);\n        }\n      }\n    );\n  }\n\n  getUserReviews() {\n    this.setState({\n      fetchingUserReviews: true,\n    });\n    user.getReviews(userReviews => {\n      this.setState({\n        userReviews,\n        fetchingUserReviews: false,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <UserReviewsContext.Provider\n          value={{\n            userReviews: this.state.userReviews,\n            fetchingUserReviews: this.state.fetchingUserReviews,\n            getUpdatedUserReviews: this.getUserReviews,\n          }}\n        >\n          <UpdateSoftwareContext.Provider value={this.updateSoftware}>\n            <AppRouter {...this.state} />\n          </UpdateSoftwareContext.Provider>\n        </UserReviewsContext.Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}